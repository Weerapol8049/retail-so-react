[{"H:\\React-projects\\retail-so-react\\src\\index.js":"1","H:\\React-projects\\retail-so-react\\src\\reportWebVitals.js":"2","H:\\React-projects\\retail-so-react\\src\\App.js":"3","H:\\React-projects\\retail-so-react\\src\\actions\\store.js":"4","H:\\React-projects\\retail-so-react\\src\\pages\\Main.js":"5","H:\\React-projects\\retail-so-react\\src\\pages\\Login.js":"6","H:\\React-projects\\retail-so-react\\src\\components\\Header.js":"7","H:\\React-projects\\retail-so-react\\src\\components\\useTable.js":"8","H:\\React-projects\\retail-so-react\\src\\actions\\order.js":"9","H:\\React-projects\\retail-so-react\\src\\pages\\MainForm.js":"10","H:\\React-projects\\retail-so-react\\src\\components\\useForm.js":"11","H:\\React-projects\\retail-so-react\\src\\components\\controls\\Controls.js":"12","H:\\React-projects\\retail-so-react\\src\\reducers\\index.js":"13","H:\\React-projects\\retail-so-react\\src\\actions\\api.js":"14","H:\\React-projects\\retail-so-react\\src\\components\\controls\\Popup.js":"15","H:\\React-projects\\retail-so-react\\src\\components\\controls\\Select.js":"16","H:\\React-projects\\retail-so-react\\src\\components\\controls\\DatePicker.js":"17","H:\\React-projects\\retail-so-react\\src\\reducers\\order.js":"18","H:\\React-projects\\retail-so-react\\src\\components\\controls\\Button.js":"19","H:\\React-projects\\retail-so-react\\src\\components\\controls\\ActionButton.js":"20","H:\\React-projects\\retail-so-react\\src\\components\\controls\\Input.js":"21","H:\\React-projects\\retail-so-react\\src\\components\\controls\\ActionButtonBadge.js":"22","H:\\React-projects\\retail-so-react\\src\\components\\controls\\Password.js":"23"},{"size":462,"mtime":1609415179628,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":893,"mtime":1611110482901,"results":"27","hashOfConfig":"25"},{"size":333,"mtime":1611110814934,"results":"28","hashOfConfig":"25"},{"size":7310,"mtime":1609588633894,"results":"29","hashOfConfig":"25"},{"size":5685,"mtime":1611133838579,"results":"30","hashOfConfig":"25"},{"size":2687,"mtime":1609408951173,"results":"31","hashOfConfig":"25"},{"size":4337,"mtime":1609585538185,"results":"32","hashOfConfig":"25"},{"size":1950,"mtime":1609592875579,"results":"33","hashOfConfig":"25"},{"size":4106,"mtime":1609588531340,"results":"34","hashOfConfig":"25"},{"size":1144,"mtime":1609588563735,"results":"35","hashOfConfig":"25"},{"size":473,"mtime":1609484351124,"results":"36","hashOfConfig":"25"},{"size":131,"mtime":1609396400487,"results":"37","hashOfConfig":"25"},{"size":716,"mtime":1609647371131,"results":"38","hashOfConfig":"25"},{"size":1992,"mtime":1609560772246,"results":"39","hashOfConfig":"25"},{"size":1570,"mtime":1609647382552,"results":"40","hashOfConfig":"25"},{"size":824,"mtime":1609486712487,"results":"41","hashOfConfig":"25"},{"size":463,"mtime":1609561096068,"results":"42","hashOfConfig":"25"},{"size":707,"mtime":1609499911037,"results":"43","hashOfConfig":"25"},{"size":893,"mtime":1609418618364,"results":"44","hashOfConfig":"25"},{"size":614,"mtime":1609499616062,"results":"45","hashOfConfig":"25"},{"size":985,"mtime":1609418603822,"results":"46","hashOfConfig":"25"},{"size":1627,"mtime":1609302519852,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1jptp5e",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"H:\\React-projects\\retail-so-react\\src\\index.js",[],["103","104"],"H:\\React-projects\\retail-so-react\\src\\reportWebVitals.js",[],"H:\\React-projects\\retail-so-react\\src\\App.js",["105","106","107","108"],"import logo from './logo.svg';\nimport './App.css';\nimport { Provider } from \"react-redux\";\nimport { store } from \"./actions/store\";\nimport Login from \"./pages/Login\";\nimport Main from \"./pages/Main\";\nimport Header from \"./components/Header\";\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#333996\",\n      light: \"#3c44b126\",\n    },\n    secondary: {\n      main: \"#f83245\",\n      light: \"#f8324526\",\n    },\n    background: {\n      default: \"#EAEDED\",\n    },\n  },\n  typography: {\n\t\tfontFamily: ['Kanit', 'sans-serif'].join(','),\n\t},\n\n});\n\n\nfunction App() {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Login ></Login>\n        {/* <Header ></Header>\n        <Main></Main> */}\n       \n      </Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","H:\\React-projects\\retail-so-react\\src\\actions\\store.js",[],"H:\\React-projects\\retail-so-react\\src\\pages\\Main.js",["109","110","111","112","113","114"],"import { ButtonGroup, InputAdornment, List, makeStyles, Paper, TableBody, TableCell, TableRow, Toolbar, withStyles } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport useTable from '../components/useTable'\r\nimport * as actions from \"../actions/order\";\r\nimport { connect } from \"react-redux\";\r\nimport Controls from \"../components/controls/Controls\";\r\nimport { Add, Close, EditOutlined, PhotoLibrary, Search, ViewList } from '@material-ui/icons';\r\nimport MainForm from \"./MainForm\";\r\n\r\nconst styles = () => ({\r\n    paper: {\r\n        padding: '1%',\r\n        marginTop: '3%',\r\n        marginRight: '5%',\r\n        marginLeft: '5%'\r\n    },\r\n    pageContent: {\r\n        margin: '3%',\r\n        padding: '2%',\r\n    },\r\n    searchInput: {\r\n        width: \"75%\",\r\n    },\r\n    newButton: {\r\n        position: \"absolute\",\r\n        right: \"10px\",\r\n    },\r\n})\r\n\r\nconst headCells = [\r\n    { id: \"date\", label: \"วันที่ขาย\" },\r\n    { id: \"storeId\", label: \"Store\" },\r\n    { id: \"pool\", label: \"Pool\" },\r\n    { id: \"qty\", label: \"จำนวน\" },\r\n    { id: \"amount\", label: \"ยอดเงินรวม\" },\r\n    { id: \"dueDate\", label: \"วันที่ติดตั้ง\" },\r\n    { id: \"salesId\", label: \"Sales order\" },\r\n    { id: \"purchId\", label: \"Purchase order\" },\r\n    { id: \"custName\", label: \"ชื่อลูกค้า\" },\r\n    { id: \"action\", label: \"\", disableSoring: true },\r\n]\r\n\r\nconst Main = ({ classes, ...props }) => {\r\n\r\n    const [recordForEdit, setRecordForEdit] = useState(null);\r\n\r\n    useEffect(() => {\r\n        props.fetchAllOrder();\r\n    }, [])\r\n\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [records, setRecords] = useState(props.orderList);\r\n    const [filterFn, setFilterFn] = useState({\r\n        fn: (items) => {\r\n            return items;\r\n        },\r\n    });\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn)\r\n\r\n    const openInPopup = (item) => {\r\n        setRecordForEdit(item);\r\n        //setOpenPopup(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.paper}>\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <Search></Search>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    ></Controls.Input>\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<Add />}\r\n                        className={classes.newButton}\r\n                        onClick={() => {\r\n                            setOpenPopup(true);\r\n                            setRecordForEdit(null);\r\n                        }}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead></TblHead>\r\n                    <TableBody>\r\n                        {\r\n                            \r\n                            recordsAfterPagingAndSorting().map((record, index) => {\r\n                                console.log('TableRow ===');\r\n                                return (\r\n                                    <TableRow key={index} hover>\r\n                                        <TableCell>{record.date}</TableCell>\r\n                                        <TableCell>{record.storeId}</TableCell>\r\n                                        <TableCell>{record.pool}</TableCell>\r\n                                        <TableCell>{record.qty}</TableCell>\r\n                                        <TableCell>{record.amount}</TableCell>\r\n                                        <TableCell>{record.confirmDate}</TableCell>\r\n                                        <TableCell>{record.salesId}</TableCell>\r\n                                        <TableCell>{record.purchId}</TableCell>\r\n                                        <TableCell>{record.custName}</TableCell>\r\n                                        <TableCell>\r\n                                            <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n                                                <Controls.ActionButton\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => {\r\n                                                        openInPopup(record);\r\n                                                    }}\r\n                                                >\r\n                                                    <EditOutlined fontSize=\"small\"></EditOutlined>\r\n                                                </Controls.ActionButton>\r\n                                                <Controls.ActionButton\r\n                                                    color=\"secondary\"\r\n                                                >\r\n                                                    <Close fontSize=\"small\"></Close>\r\n                                                </Controls.ActionButton>\r\n                                                <Controls.ActionButtonBadge\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => {\r\n                                                        openInPopup(record);\r\n                                                    }}\r\n                                                >\r\n                                                    <PhotoLibrary fontSize=\"small\"></PhotoLibrary>\r\n                                                </Controls.ActionButtonBadge>\r\n                                                <Controls.ActionButtonBadge\r\n                                                    color=\"secondary\"\r\n                                                >\r\n                                                    <ViewList fontSize=\"small\"></ViewList>\r\n                                                </Controls.ActionButtonBadge>\r\n                                            </ButtonGroup>\r\n\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                )\r\n                            })\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination></TblPagination>\r\n            </Paper>\r\n            <Controls.Popup\r\n                title=\"New Form\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <MainForm></MainForm>\r\n            </Controls.Popup>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    orderList: state.order.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllOrder: actions.fetchAll\r\n    //fetchStoreOrder: actions.fetchStore\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Main));\r\n","H:\\React-projects\\retail-so-react\\src\\pages\\Login.js",["115","116","117","118","119","120","121","122","123","124","125","126"],"H:\\React-projects\\retail-so-react\\src\\components\\Header.js",[],"H:\\React-projects\\retail-so-react\\src\\components\\useTable.js",[],"H:\\React-projects\\retail-so-react\\src\\actions\\order.js",["127"],"import api from \"./api\";\r\n\r\nexport const ACTION_TYPES = {\r\n    CREATE: 'CREATE',\r\n    UPDATE: 'UPDATE',\r\n    DELETE: 'DELETE',\r\n    FETCH_ALL: 'FETCH_ALL',\r\n    FETCH_LOGIN: 'FETCH_LOGIN',\r\n    FETCH_STORE: 'FETCH_STORE'\r\n}\r\n\r\nconst stored = [];\r\nfunction insertStored(recId, storeId, name) {\r\n    return {recId, storeId, name };\r\n}\r\n\r\nexport const fetchLogin = (user, password, onSuccess) => dispatch => {\r\n    api.order().fetchLogin(user, password)\r\n        .then(response => {\r\n            dispatch({\r\n                type: ACTION_TYPES.FETCH_LOGIN,\r\n                payload: response.data\r\n            })\r\n            onSuccess();\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const fetchAll = () => (dispatch) => {\r\n\r\n    api.order().fetchAll()\r\n        .then(response => {\r\n            dispatch({\r\n                type: ACTION_TYPES.FETCH_ALL,\r\n                payload: response.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const fetchStore = (name, type) => dispatch => {\r\n    api.store().fetchStore(name, type)\r\n        .then(response => {\r\n\r\n            const data = response.data.map((element) => {\r\n                return { element };\r\n            });\r\n            for (const [index, value] of data.entries()) {\r\n                stored.push(insertStored(value.element.recId, value.element.storeId, value.element.name));\r\n            }\r\n\r\n\r\n            dispatch({\r\n                type: ACTION_TYPES.FETCH_STORE,\r\n                payload: stored\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n// export const fetchAll =  ()=> {\r\n//     return async dispatch => {\r\n//         await api.order().fetchAll()\r\n//         .then(response =>{\r\n//             dispatch({\r\n//                 type: ACTION_TYPES.FETCH_ALL,\r\n//                 payload: response.data\r\n//             })\r\n//         })\r\n//         .catch(err => console.log(err))\r\n//     }\r\n\r\n// }","H:\\React-projects\\retail-so-react\\src\\pages\\MainForm.js",["128","129","130","131","132","133","134","135","136","137"],"import { Grid } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Controls from \"../components/controls/Controls\";\r\nimport { useForm, Form } from '../components/useForm';\r\nimport * as actions from \"../actions/order\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst initialFieldValue = {\r\n    recId: 0,\r\n    date: new Date(),\r\n    storeId: '',\r\n    pool: '',\r\n    qty: 0,\r\n    amount: 0,\r\n    confirmDate: new Date(),\r\n    salesId: '',\r\n    purchId: '',\r\n    custName: '',\r\n    lineCount: 0,\r\n    imageCount: 0\r\n}\r\n\r\nconst initialFieldStoreValue = {\r\n    storeId: '',\r\n    name: '',\r\n}\r\n\r\nconst MainForm = (props) => {\r\n\r\n    const {\r\n      values, \r\n      setValues,\r\n      errors, \r\n      setErrors, \r\n      handleInputChange, \r\n      resetForm \r\n    } = useForm(initialFieldValue);\r\n\r\n    // useEffect(() => {\r\n    //     props.fetchStoreOrder();\r\n    // }, [])//componentDidMount\r\n\r\n\r\n    // const [stores, setStores] = useState(props.storeList)\r\n\r\n    return (\r\n      \r\n            <Grid container>\r\n                <Grid item md={6} xs={6}>\r\n                    <Controls.DatePicker\r\n                        name=\"date\"\r\n                        label=\"วันที่ขาย\"\r\n                        value={values.date}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Select\r\n                        label=\"Store Id\"\r\n                        name=\"storeId\"\r\n                        value={values.storeId}\r\n                        onChange={handleInputChange}\r\n                        //options={stores}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"จำนวน\"\r\n                        name=\"qty\"\r\n                        value={values.qty}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6} xs={6}>\r\n                    <Controls.DatePicker\r\n                        name=\"confirmDate\"\r\n                        label=\"วันที่ติดตั้ง\"\r\n                        value={values.confirmDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Select\r\n                        label=\"Pool\"\r\n                        name=\"pool\"\r\n                        //value={values.pool}\r\n                        //onChange={handleInputChange}\r\n                    //options={}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"ยอดเงินรวม\"\r\n                        name=\"amount\"\r\n                        value={values.amount}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={12} xs={12}>\r\n                    <Controls.Input\r\n                        label=\"ชื่อลูกค้า\"\r\n                        name=\"custName\"\r\n                        value={values.custName}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6} xs={6}>\r\n                    <Controls.Input\r\n                        label=\"Sales order\"\r\n                        name=\"salesId\"\r\n                        value={values.salesId}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6} xs={6}>\r\n                    <Controls.Input\r\n                        label=\"Purchase order\"\r\n                        name=\"purchId\"\r\n                        value={values.purchId}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </Grid>\r\n             \r\n            </Grid>\r\n       \r\n    )\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n//     storeList: state.order.list\r\n// })\r\n\r\n// const mapActionToProps = {\r\n//     fetchStoreOrder: actions.fetchStore\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapActionToProps) (MainForm);\r\nexport default MainForm;\r\n\r\n\r\n","H:\\React-projects\\retail-so-react\\src\\components\\useForm.js",[],"H:\\React-projects\\retail-so-react\\src\\components\\controls\\Controls.js",[],"H:\\React-projects\\retail-so-react\\src\\reducers\\index.js",[],"H:\\React-projects\\retail-so-react\\src\\actions\\api.js",["138","139","140"],"import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:60658/api/\"\r\n\r\nexport default {\r\n    order(url = baseUrl){\r\n        return  {\r\n            fetchAll : async () => await  axios.get(url + 'order/'),\r\n            fetchById : async (id) => await axios.get(url + id),\r\n            fetchLogin : async (user, password) => await axios.get(url + 'login/' + user + '/' + password),\r\n            fetchStore : async (name, type) => await axios.get(url + 'order/store/' + 'admin' + ':' + 0),\r\n            create : newRecord => axios.post(url, newRecord),\r\n            update : (id, updateRecord) => axios.put(url + id, updateRecord),\r\n            delete : id => axios.delete(url + id)\r\n        }\r\n    }\r\n   \r\n}\r\n\r\n","H:\\React-projects\\retail-so-react\\src\\components\\controls\\Popup.js",["141"],"import { Dialog, DialogActions, DialogContent, DialogTitle, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport ActionButton from \"./ActionButton\";\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { Form } from '../useForm';\r\nimport Button from './Button';\r\nimport Controls from \"./Controls\";\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <Dialog classes={{ paper: classes.dialogWrapper }} open={openPopup} maxWidth=\"md\" >\r\n            <Form>\r\n                <DialogTitle className={classes.dialogTitle}>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                            {title}\r\n                        </Typography>\r\n                        <ActionButton\r\n                            color=\"secondary\"\r\n                            onClick={() => { setOpenPopup(false) }}\r\n                        >\r\n                            <CloseIcon></CloseIcon>\r\n                        </ActionButton>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    {children}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Controls.Button\r\n                        type=\"submit\"\r\n                        text=\"Create\" />\r\n                    <Controls.Button\r\n                        text=\"Cancel\"\r\n                        color=\"default\"\r\n                    //onClick={resetForm}\r\n                    />\r\n                </DialogActions>\r\n            </Form>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n","H:\\React-projects\\retail-so-react\\src\\components\\controls\\Select.js",["142","143","144"],"import { FormControl, InputLabel,Select as MuiSelect, MenuItem, FormHelperText } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport * as actions from \"../../actions/order\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n// export default function Select(props) {\r\n    const Select = (props) => {\r\n   const { name, label, value,error=null, onChange, options } = props;\r\n\r\n   useEffect(() => {\r\n    props.fetchStoreOrder();\r\n}, [])//componentDidMount\r\n\r\n\r\nconst [stores, setStores] = useState(props.storeList)\r\n\r\nconsole.log(\"Store === \" + JSON.stringify(stores))\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\"\r\n        {...(error && {error:true})}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect\r\n                label={label}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {\r\n                    stores.map(item => (\r\n                        <MenuItem key={item.recId} value={item.storeId}>\r\n                            {item.name}\r\n                        </MenuItem>\r\n                    )\r\n                    )\r\n                }\r\n            </MuiSelect>\r\n            {error && <FormHelperText>{error}</FormHelperText>}\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    storeList: state.order.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchStoreOrder: actions.fetchStore\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps) (Select);\r\n","H:\\React-projects\\retail-so-react\\src\\components\\controls\\DatePicker.js",[],"H:\\React-projects\\retail-so-react\\src\\reducers\\order.js",[],"H:\\React-projects\\retail-so-react\\src\\components\\controls\\Button.js",[],"H:\\React-projects\\retail-so-react\\src\\components\\controls\\ActionButton.js",["145"],"import { Badge, Button, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 0,\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    secondary: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.secondary.main,\r\n        }\r\n    },\r\n    primary: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n}))\r\n\r\nexport default function ActionButton(props) {\r\n\r\n    const { color, children, onClick } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Button\r\n            className={`${classes.root} ${classes[color]}`}\r\n            onClick={onClick}\r\n        >\r\n            {children}\r\n        </Button>\r\n\r\n    )\r\n}\r\n","H:\\React-projects\\retail-so-react\\src\\components\\controls\\Input.js",[],"H:\\React-projects\\retail-so-react\\src\\components\\controls\\ActionButtonBadge.js",[],"H:\\React-projects\\retail-so-react\\src\\components\\controls\\Password.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":12},{"ruleId":"150","severity":1,"message":"154","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":12},{"ruleId":"150","severity":1,"message":"155","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":14},{"ruleId":"150","severity":1,"message":"156","line":8,"column":26,"nodeType":"152","messageId":"153","endLine":8,"endColumn":36},{"ruleId":"150","severity":1,"message":"157","line":1,"column":39,"nodeType":"152","messageId":"153","endLine":1,"endColumn":43},{"ruleId":"150","severity":1,"message":"156","line":1,"column":45,"nodeType":"152","messageId":"153","endLine":1,"endColumn":55},{"ruleId":"150","severity":1,"message":"158","line":45,"column":12,"nodeType":"152","messageId":"153","endLine":45,"endColumn":25},{"ruleId":"159","severity":1,"message":"160","line":49,"column":8,"nodeType":"161","endLine":49,"endColumn":10,"suggestions":"162"},{"ruleId":"150","severity":1,"message":"163","line":52,"column":21,"nodeType":"152","messageId":"153","endLine":52,"endColumn":31},{"ruleId":"150","severity":1,"message":"164","line":53,"column":22,"nodeType":"152","messageId":"153","endLine":53,"endColumn":33},{"ruleId":"150","severity":1,"message":"165","line":2,"column":2,"nodeType":"152","messageId":"153","endLine":2,"endColumn":8},{"ruleId":"150","severity":1,"message":"166","line":4,"column":2,"nodeType":"152","messageId":"153","endLine":4,"endColumn":13},{"ruleId":"150","severity":1,"message":"167","line":18,"column":8,"nodeType":"152","messageId":"153","endLine":18,"endColumn":12},{"ruleId":"150","severity":1,"message":"168","line":19,"column":8,"nodeType":"152","messageId":"153","endLine":19,"endColumn":16},{"ruleId":"150","severity":1,"message":"169","line":20,"column":10,"nodeType":"152","messageId":"153","endLine":20,"endColumn":17},{"ruleId":"150","severity":1,"message":"170","line":20,"column":19,"nodeType":"152","messageId":"153","endLine":20,"endColumn":23},{"ruleId":"150","severity":1,"message":"171","line":21,"column":10,"nodeType":"152","messageId":"153","endLine":21,"endColumn":22},{"ruleId":"150","severity":1,"message":"172","line":22,"column":13,"nodeType":"152","messageId":"153","endLine":22,"endColumn":20},{"ruleId":"150","severity":1,"message":"173","line":23,"column":10,"nodeType":"152","messageId":"153","endLine":23,"endColumn":17},{"ruleId":"150","severity":1,"message":"174","line":99,"column":8,"nodeType":"152","messageId":"153","endLine":99,"endColumn":11},{"ruleId":"175","severity":1,"message":"176","line":147,"column":7,"nodeType":"177","endLine":150,"endColumn":8},{"ruleId":"175","severity":1,"message":"176","line":209,"column":7,"nodeType":"177","endLine":209,"endColumn":48},{"ruleId":"150","severity":1,"message":"178","line":48,"column":25,"nodeType":"152","messageId":"153","endLine":48,"endColumn":30},{"ruleId":"150","severity":1,"message":"179","line":2,"column":17,"nodeType":"152","messageId":"153","endLine":2,"endColumn":26},{"ruleId":"150","severity":1,"message":"180","line":2,"column":28,"nodeType":"152","messageId":"153","endLine":2,"endColumn":36},{"ruleId":"150","severity":1,"message":"170","line":4,"column":19,"nodeType":"152","messageId":"153","endLine":4,"endColumn":23},{"ruleId":"150","severity":1,"message":"172","line":5,"column":13,"nodeType":"152","messageId":"153","endLine":5,"endColumn":20},{"ruleId":"150","severity":1,"message":"173","line":6,"column":10,"nodeType":"152","messageId":"153","endLine":6,"endColumn":17},{"ruleId":"150","severity":1,"message":"181","line":23,"column":7,"nodeType":"152","messageId":"153","endLine":23,"endColumn":29},{"ruleId":"150","severity":1,"message":"182","line":32,"column":7,"nodeType":"152","messageId":"153","endLine":32,"endColumn":16},{"ruleId":"150","severity":1,"message":"183","line":33,"column":7,"nodeType":"152","messageId":"153","endLine":33,"endColumn":13},{"ruleId":"150","severity":1,"message":"184","line":34,"column":7,"nodeType":"152","messageId":"153","endLine":34,"endColumn":16},{"ruleId":"150","severity":1,"message":"185","line":36,"column":7,"nodeType":"152","messageId":"153","endLine":36,"endColumn":16},{"ruleId":"186","severity":1,"message":"187","line":5,"column":1,"nodeType":"188","endLine":18,"endColumn":2},{"ruleId":"189","severity":1,"message":"190","line":11,"column":85,"nodeType":"191","messageId":"192","endLine":11,"endColumn":86},{"ruleId":"189","severity":1,"message":"190","line":11,"column":95,"nodeType":"191","messageId":"192","endLine":11,"endColumn":96},{"ruleId":"150","severity":1,"message":"193","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":14},{"ruleId":"150","severity":1,"message":"194","line":9,"column":53,"nodeType":"152","messageId":"153","endLine":9,"endColumn":60},{"ruleId":"159","severity":1,"message":"160","line":13,"column":4,"nodeType":"161","endLine":13,"endColumn":6,"suggestions":"195"},{"ruleId":"150","severity":1,"message":"196","line":16,"column":16,"nodeType":"152","messageId":"153","endLine":16,"endColumn":25},{"ruleId":"150","severity":1,"message":"197","line":1,"column":10,"nodeType":"152","messageId":"153","endLine":1,"endColumn":15},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Main' is defined but never used.","'Header' is defined but never used.","'makeStyles' is defined but never used.","'List' is defined but never used.","'recordForEdit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["200"],"'setRecords' is assigned a value but never used.","'setFilterFn' is assigned a value but never used.","'Avatar' is defined but never used.","'FilledInput' is defined but never used.","'clsx' is defined but never used.","'Controls' is defined but never used.","'useForm' is defined but never used.","'Form' is defined but never used.","'ACTION_TYPES' is defined but never used.","'actions' is defined but never used.","'connect' is defined but never used.","'API' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'index' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'initialFieldStoreValue' is assigned a value but never used.","'setValues' is assigned a value but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'resetForm' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Button' is defined but never used.","'options' is assigned a value but never used.",["201"],"'setStores' is assigned a value but never used.","'Badge' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"202","fix":"204"},"Update the dependencies array to be: [props]",{"range":"205","text":"206"},{"range":"207","text":"206"},[1522,1524],"[props]",[460,462]]